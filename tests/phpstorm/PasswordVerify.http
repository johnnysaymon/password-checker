### Sucess test
POST {{host}}/verify
Content-Type: application/json

{
  "password": "Teste0SenhaFort*e\\123&",
  "rules": [
    {"rule": "minSize","value": 10},
    {"rule": "minUppercase","value": 3},
    {"rule": "minLowercase","value": 7},
    {"rule": "minDigit","value": 3},
    {"rule": "minSpecialChars","value": 2},
    {"rule": "noRepeted","value": 0}
  ]
}

> {%
client.test('Request sucess', function(){
    client.assert(response.status === 200, 'Response status is not 200');
    client.assert(response.body.hasOwnProperty('verify'), 'Cannot find "verify" in response');
    client.assert(response.body['verify'] === true, 'Status in response error');
})
 %}

### Failed test
POST {{host}}/verify
Content-Type: application/json

{
  "password": "Teste0SenhaFort**e\\123&",
  "rules": [
    {"rule": "minSize","value": 50},
    {"rule": "minUppercase","value": 4},
    {"rule": "minLowercase","value": 13},
    {"rule": "minDigit","value": 5},
    {"rule": "minSpecialChars","value": 5},
    {"rule": "noRepeted","value": 0}
  ]
}

> {%
client.test('Request with error', function(){
    client.assert(response.status === 422, 'Response status is not 422');
    client.assert(response.body.hasOwnProperty('verify'), 'Cannot find "verify" in response');
    client.assert(response.body['verify'] === false, 'Status in response error');
})
 %}
